#include "route_planner.h"

int main(int argc, char **argv) {
  ros::init(argc, argv, "route_planner");
  ros::NodeHandle nh("~");

  ////////////////////////////////////////////////////////////////////////////
  // ROS Param Server
  ////////////////////////////////////////////////////////////////////////////
  double map_step;

  nh.param<double>("map_step", map_step, 1.0);

  ////////////////////////////////////////////////////////////////////////////
  // Wait for opendrive map msg
  ////////////////////////////////////////////////////////////////////////////
  ros::Duration(1.0).sleep();

  ////////////////////////////////////////////////////////////////////////////
  // Wait for opendrive map msg
  ////////////////////////////////////////////////////////////////////////////
  boost::shared_ptr<std_msgs::String const> shared_map_msg =
      ros::topic::waitForMessage<std_msgs::String>(
          "/carla/ego_vehicle/opendrive_map", nh);
  std::string xml_str = shared_map_msg->data;

  /////////////////////////////////////////////////////////////////
  // Data type conversion and value checking
  /////////////////////////////////////////////////////////////////
  std::shared_ptr<OdrMap> map_parser =
      std::make_shared<OdrMap>(xml_str, map_step);

  ROS_INFO("OdrMap built.");

  ////////////////////////////////////////////////////////////////////////////
  // Map Loader instance
  ////////////////////////////////////////////////////////////////////////////
  RoutePlanner route_planner(nh, map_parser);

  ////////////////////////////////////////////////////////////////////////////
  // ROS Spin
  ////////////////////////////////////////////////////////////////////////////
  ros::spin();

  return 0;
}
